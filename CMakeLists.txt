cmake_minimum_required(VERSION 3.13)
set(PICO_BOARD "pico_w")
IF (CMAKE_BUILD_TYPE STREQUAL "DEBUG")
    MESSAGE(STATUS "DEBUG MODE")
    SET(CMAKE_BUILD_TYPE Debug)
    add_compile_definitions(__DEBUG)
ELSE()
    MESSAGE(STATUS "RELEASE MODE")
    SET(CMAKE_BUILD_TYPE Release)
ENDIF()

IF (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/pico-sdk)
    message(STATUS "Pico SDK found in the source directory")
    IF (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/pico-sdk/lib/cyw43-driver/cyw43.h)
        message(STATUS "Found the submodules in the pico-sdk directory")
    ELSE()
        message(STATUS "No submodules found in the pico-sdk directory, cloning from git") 
        execute_process(COMMAND ${CMAKE_COMMAND} -E chdir ${CMAKE_CURRENT_SOURCE_DIR}/pico-sdk git submodule update --init)
    ENDIF()
    include(pico-sdk/pico_sdk_init.cmake)

ELSE()
    message(STATUS "Pico SDK not found, cloning from git")
    set(PICO_SDK_FETCH_FROM_GIT on)
    include(pico_sdk_import.cmake)
ENDIF()
project(van_turco C CXX ASM) 
pico_sdk_init() 

add_executable(van_turco ./src/main.cpp ./kernel32/context/svc.s  ./kernel32/kernel32.hpp)

IF (DEFINED ENV{BOMBAY_PATH})
message(STATUS "BOMBAY_PATH found")
target_include_directories(van_turco PUBLIC ENV{BOMBAY_PATH})
include(ENV{BOMBAY_PATH}/import.cmake)
ELSE()
message(STATUS "BOMBAY_PATH not found, getting from parent")
target_include_directories(van_turco PUBLIC ${CMAKE_CURRENT_LIST_DIR}/../bombay/)
include(${CMAKE_CURRENT_LIST_DIR}/../bombay/import.cmake)
ENDIF()
target_link_libraries(van_turco pico_stdlib pico_stdlib pico_cyw43_arch_none hardware_pio hardware_dma hardware_adc hardware_irq )
IF (DEFINED ENV{LIBARBYS_PATH})
message(STATUS "LIBARBYS PATH found " $ENV{LIBARBYS_PATH})
target_include_directories(van_turco PUBLIC $ENV{LIBARBYS_PATH})
execute_process(COMMAND ${CMAKE_COMMAND} -E chdir $ENV{LIBARBYS_PATH} tree)
ELSE()
message(STATUS "LIBARBYS PATH not found, getting from parent")

target_include_directories(van_turco PUBLIC ${CMAKE_CURRENT_LIST_DIR}/../lib32arbys/)
ENDIF()
pico_enable_stdio_usb(van_turco 1)
pico_enable_stdio_uart(van_turco 1)

pico_add_extra_outputs(van_turco)